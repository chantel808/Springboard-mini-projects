/* Welcome to the SQL mini project

The data you need is in the "country_club" database. This database
contains 3 tables:
    i) the "Bookings" table,
    ii) the "Facilities" table, and
    iii) the "Members" table.

Note that, if you need to, you can also download these tables locally.

In the mini project, you'll be asked a series of questions. You can
solve them using the platform, but for the final deliverable,
paste the code for each solution into this script, and upload it
to your GitHub.

Before starting with the questions, feel free to take your time,
exploring the data, and getting acquainted with the 3 tables. */


/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */ 
Tennis Court 1, Tennis Court 2, Massage Room 1, Massage Room 2, Squash Court

SELECT DISTINCT name AS 'Facility with member fee'
	FROM `Facilities` 
	WHERE membercost > 0

/* Q2: How many facilities do not charge a fee to members? */ 
There are 4 facilities that do not charge a fee to members.

SELECT COUNT(CASE WHEN membercost = 0 THEN facid ELSE NULL END) AS no_cost_fac
	FROM `Facilities` 


/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */
SELECT facid,
		name,
		membercost,
		monthlymaintenance
	FROM `Facilities` 
	WHERE membercost > 0
	AND membercost < monthlymaintenance * 0.2


/* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */
SELECT *
	FROM `Facilities` 
	WHERE facid = 1

UNION

SELECT *
	FROM `Facilities` 
	WHERE facid = 5


/* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */
SELECT name,
		monthlymaintenance,
		CASE WHEN monthlymaintenance > 100 THEN 'expensive'
		ELSE 'cheap' END AS maintenance_cost
	FROM `Facilities` 


/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

/* This finds the first and last name of member who signed up at country club last, so I
queried the last joindate from the Members table */
SELECT surname,
		firstname,
		joindate
	FROM `Members` 
	WHERE joindate = (SELECT MAX(joindate) FROM `Members`)


/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */
SELECT DISTINCT CONCAT(m.surname, ', ', m.firstname) AS member_name,
		name AS facility_name
	FROM `Members` m
	JOIN `Bookings` b
	ON m.memid = b.memid
	JOIN `Facilities` f
	ON b.facid = f.facid
	WHERE name LIKE 'Tennis Court %'
	ORDER BY 1,2
	

/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */

/* Since all costs are per half-hour 'slot', I computed the total member cost to be the
number of slots * member cost, and the total guest cost to be the number of slots * guest
cost.*/

SELECT DISTINCT name as facility_name,
		CONCAT(m.firstname, ' ', m.surname) AS member_name,
		CASE WHEN m.memid = 0 THEN b.slots * f.guestcost
			ELSE b.slots * f.membercost END AS total_cost
	FROM `Bookings` b
	LEFT JOIN `Members` m
	ON b.memid = m.memid
	JOIN `Facilities` f
	ON b.facid = f.facid
	WHERE b.starttime > '2012-09-13 23:59:59' AND b.starttime < '2012-09-15 00:00:00'
	HAVING total_cost > 30
	ORDER BY total_cost DESC


/* Q9: This time, produce the same result as in Q8, but using a subquery. */
SELECT DISTINCT y.name as facility_name,
		z.member_name,
		CASE WHEN x.memid = 0 THEN x.slots * y.guestcost
			ELSE x.slots * y.membercost END AS total_cost
FROM
(
    SELECT * 
	FROM `Bookings` 
	WHERE starttime > '2012-09-13 23:59:59' AND starttime < '2012-09-15 00:00:00'
) AS x
INNER JOIN 
(
    SELECT facid,
    		name,
    		membercost,
    		guestcost
 	FROM `Facilities`
) AS y
ON x.facid = y.facid
INNER JOIN
(
    SELECT memid,
    		CONCAT(firstname, ' ', surname) AS member_name
    FROM `Members`
) AS z
ON x.memid = z.memid
HAVING total_cost > 30
ORDER BY total_cost DESC

/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

/* Revenue by definition is the amount of incoming money (without costs taken into 
consideration), so the revenue is equivalent to the sum of the member and guest costs */

SELECT DISTINCT f.name as facility_name,
		SUM(CASE WHEN b.memid = 0 THEN b.slots * f.guestcost
			ELSE b.slots * f.membercost END) AS revenue
	FROM `Facilities` f
	JOIN `Bookings` b
	ON f.facid = b.facid
	GROUP BY 1
	HAVING revenue < 1000
	ORDER BY 2

